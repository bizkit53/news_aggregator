// Mocks generated by Mockito 5.3.2 from annotations
// in news_aggregator/test/logic/repositories/news_repository/news_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news_aggregator/logic/services/network_services/news_network_service.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NewsNetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsNetworkService extends _i1.Mock
    implements _i3.NewsNetworkService {
  MockNewsNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set apiHandler(_i2.Dio? _apiHandler) => super.noSuchMethod(
        Invocation.setter(
          #apiHandler,
          _apiHandler,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i2.Response<dynamic>> getTopNews({required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopNews,
          [],
          {#page: page},
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getTopNews,
            [],
            {#page: page},
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
  @override
  _i4.Future<_i2.Response<dynamic>> searchNews({
    required int? page,
    required String? searchPattern,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchNews,
          [],
          {
            #page: page,
            #searchPattern: searchPattern,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #searchNews,
            [],
            {
              #page: page,
              #searchPattern: searchPattern,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
}
